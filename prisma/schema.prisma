// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @unique @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  email    String  @unique
  hash     String
  hashedRt String?

  full_name        String?
  role             Role      @default(USER)
  shipping_address String?
  Product          Product[]
  Order            Order[]

  @@map("users")
}

enum Role {
  ADMIN
  USER
}

model Product {
  id             String   @unique @default(uuid())
  name           String
  description    String?
  price          Int
  in_stock       Boolean  @default(true)
  stock_quantity Int
  category       String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  user          User           @relation(fields: [user_id], references: [id])
  user_id       String
  order_details OrderDetails[]

  @@map("products")
}

model Order {
  id              String          @unique @default(uuid())
  total_amount    Int
  payment_status  PaymentStatus?
  delivery_status DeliveryStatus?
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt

  user    User   @relation(fields: [user_id], references: [id])
  user_id String

  order_details OrderDetails[]

  @@map("orders")
}

enum PaymentStatus {
  COMPLETE
  FAILED
  PENDING
}

enum DeliveryStatus {
  ORDER_PLACED
  IN_TRANSIT
  DELIVERED
}

model OrderDetails {
  id                String @unique @default(uuid())
  quantity          Int
  price_at_purchase Int

  order    Order  @relation(fields: [order_id], references: [id], onDelete: Cascade)
  // order    Order  @relation(fields: [order_id], references: [id])
  order_id String

  product    Product @relation(fields: [product_id], references: [id])
  product_id String

  @@map("order_details")
}
